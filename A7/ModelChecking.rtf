{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red246\green246\blue249;\red246\green246\blue249;}
\margl1440\margr1440\vieww16760\viewh8460\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 4. Is it possible for someone to be suspended indefinitely?\
EG(Pwait -> AX(AF(~Pwait))). (expect \'93TRUE\'94)\
\
5. Can you restore somebody when nobody was previously suspended?\
AG(~Pwait & Tresp) & AG(Pwait & ~Tresp). (expect \'93FALSE\'94)\
\
6. Can somebody be added if there is no moderator?\
AG(~Pmoderate & Taddp). (expect \'93FALSE\'94)\
\
7. Can the moderator delete all the listeners?\
EF(Tdelp & ~Plisten). (expect \'93FALSE\'94)\
\
Dining philosophers\
\
\pard\tx720\pardeftab720

\f1 \cf0 \cb2 (a) There can never be two philosopher eating at the same time.\
EF(EF(Peating1 & Peating2) | EF(Peating2 & Peating3) | EF(Peating1& Peating3)) expect FALSE\
\
(b) It is possible to for only one philosopher to be thinking\
EF((Pthinking1 & ~Pthinking2 & ~Pthinking3) | (~\cb3 Pthinking1 & ~Pthinking2 & Pthinking3) | (~Pthinking1 & Pthinking2 & ~Pthinking3)) expect False\cb2 \
\
(c) It is impossible that any philosopher is starved... i.e., fails to get two forks to eat.\
AG(~TgrabForks1 -> AX(EF(~TgrabForks1))) Expect True (he can not have forks, and on the next state still doesn\'92t get forks, so it\'92s true that he can be starved)\
\
(d) There is no chance that once a philosopher gets the forks it eats forever and never gives up the forks\
AG(TgrabForks1 -> AX(AF(~TreleaseForks1))) expect true (philosopher grabs the forks, there are states where he doesn\'92t release the forks right after so true)\
\
(e) It is impossible for all philosophers to always think and never eat
\f0 \cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 EF((Pthinking1 & Pthinking2 & Pthinking3) -> AX(AF(Pthinking1 & Pthinking2 & Pthinking3))) expect True\
}